import { NextPage } from "next";
import Head from "next/head";
import Link from "next/link";
import {useRouter} from "next/router";
import {useForm} from 'react-hook-form'
import  {zodResolver} from '@hookform/resolvers/zod'
import React, {  useCallback, useState } from "react";
import { api } from "../../utils/api";
import {ILogin,loginSchema} from "../../schemas/auth";
const LoginPage: NextPage = () => {

    const router=useRouter()

    //
    const {mutate} = api.user.loginUser.useMutation({
        onSuccess:async(data)=>{
            localStorage.setItem('username', data.body.username)
            localStorage.setItem('id', data.body.id)
            await router.push('/home')
        },
     
        
    })
    const {register,handleSubmit} = useForm<ILogin>({
        resolver:zodResolver(loginSchema) 
    })
    const onSubmit=useCallback(async(data:ILogin)=>{
        try {
            mutate(data) 
        } catch (error) {
           console.log(error) 
        }
    },[])

  // const { mutateAsync,data } = api.user.singin.useMutation({
  //       onSuccess:async()=>{
  //           await router.push(`/home`)
  //           localStorage.setItem('userId',data?.userId??'' ) 
  //       }
  //   });
  // const handleChange = (e: any) => {
  //   setInput({ ...input, [e.target.name]: e.target.value });
  // };
  //   const random=Math.floor(Math.random()*1000);
  //   console.log(random)
  // const handleSubmit = async (e: any) => {
  //   e.preventDefault();
  //   await mutateAsync(input);
  // };

  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex flex-col items-center justify-center min-h-screen bg-gray-300">
        <div className="flex flex-col w-1/3 bg-white border h-72 rounded-md border-gray-50">
          <p className="text-center text-black"> Colab Editor</p>
          <div className="flex flex-col items-center justify-around min-h-full gap-3">
            <form onSubmit={handleSubmit(onSubmit)}>
              <input
                className="w-full pb-2 text-center outline-none"
                // name="email"
                placeholder="Email"
                // onChange={(e) => handleChange(e)}
                {...register('email')}
              />
              <input
                className="w-full text-center outline-none"
                // name="password"
                placeholder="Password"
                // onChange={(e) => handleChange(e)}
                {...register('password')}
              />
              <button className="w-full mt-5 text-center border-2 hover:bg-blue-100">
                LOGIN
              </button>
            </form>

            <Link
              className="flex justify-center text-xs font-bold text-red-500"
              href="/home"
            >
            home
            </Link>
            <Link
              className="flex justify-center text-xs font-bold text-red-500"
              href="/register"
            >
              Register
            </Link>
          </div>
        </div>
      </main>
    </>
  );
};

export default LoginPage;
